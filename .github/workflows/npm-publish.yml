name: Publish Package to npmjs
on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'dry run for npm publish'
        required: true
        default: true
        type: boolean
      ignore_publish_failed:
        description: 'ignore publish failed, not exit'
        required: true
        default: false
        type: boolean
  release:
    types: [created]
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.15.1'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm install -g typescript@4.1.6
      - name: NPM config
        run: |
          npm config set registry https://registry.npmjs.org
          npm config set email ${{ vars.SDK_EMAIL }}
          npm config set //registry.npmjs.org/:_authToken "${{ secrets.AUTH_TOKEN }}"
      - name: Compile projects
        shell: bash
        run: |
          for service in `ls "${GITHUB_WORKSPACE}/services"`
          do
            cd "${GITHUB_WORKSPACE}/services/${service}" || exit 1
            first=true
            for version in `ls`
            do
              if test -d "${version}"
              then
                if ${first}; then
                  echo "export * from './${version}/public-api';" >> "g42cloud-sdk-${service}.ts"
                  first=false
                fi
               echo "export * as ${version} from './${version}/public-api';" >> "g42cloud-sdk-${service}.ts"
              fi
            done
          done
          cd "${GITHUB_WORKSPACE}" || exit 1
          tsc || true
      - name: Publish package
        shell: bash
        run: |
          npm_publish="npm publish --access public"
          if [[ "${{ inputs.dry_run }}" == "true" ]]; then npm_publish="${npm_publish} --dry-run true"; fi
          if [[ "${{ inputs.ignore_publish_failed }}" == "true" ]]; then npm_publish="${npm_publish} || true"; fi
          version=$(grep -oP '(?<="version": ")[^"]+' "${GITHUB_WORKSPACE}/package.json")
          cd "${GITHUB_WORKSPACE}/core" || exit 1
          find "${GITHUB_WORKSPACE}" -maxdepth 1 -mindepth 1 -type f -exec cp {} . \;
          $npm_publish
          cd "${GITHUB_WORKSPACE}/services" || exit 1
          for each in `ls .`
          do
            cd "${each}" || exit 1
            echo -e "{\n  \"name\": \"@g42cloud/g42cloud-sdk-${each}\",\n  \"version\": \"${version}\",\n  \"description\": \"G42cloud SDK for ${each}\",\n  \"main\": \"g42cloud-sdk-${each}.js\",\n  \"typings\": \"g42cloud-sdk-${each}.d.ts\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/g42cloud-sdk/g42cloud-sdk-nodejs\"\n  },\n  \"author\": \"G42Cloud_SDK\",\n  \"license\": \"Apache-2.0\",\n  \"dependencies\": {\n    \"@g42cloud/g42cloud-sdk-core\": \"^${version}\"\n  }\n}" > package.json
            $npm_publish
            cd - || exit 1
          done
          cd "${GITHUB_WORKSPACE}/all" || exit 1
          $npm_publish
